"use strict";exports.id=8140,exports.ids=[8140],exports.modules={8140:(t,e,s)=>{s.d(e,{OutOfCanvasUpdater:()=>i});let a=(t,e)=>t.default===e||t.bottom===e||t.left===e||t.right===e||t.top===e;class i{constructor(t){this._updateOutMode=async(t,e,s,a)=>{for(let i of this.updaters)await i.update(t,a,e,s)},this.container=t,this.updaters=[]}async init(t){this.updaters=[];let e=t.options.move.outModes;if(a(e,"bounce")){let{BounceOutMode:t}=await s.e(2e3).then(s.bind(s,2e3));this.updaters.push(new t(this.container))}else if(a(e,"out")){let{OutOutMode:t}=await s.e(9353).then(s.bind(s,9353));this.updaters.push(new t(this.container))}else if(a(e,"destroy")){let{DestroyOutMode:t}=await s.e(52).then(s.bind(s,52));this.updaters.push(new t(this.container))}else if(a(e,"none")){let{NoneOutMode:t}=await s.e(8508).then(s.bind(s,8508));this.updaters.push(new t(this.container))}}isEnabled(t){return!t.destroyed&&!t.spawning}async update(t,e){let s=t.options.move.outModes;await this._updateOutMode(t,e,s.bottom??s.default,"bottom"),await this._updateOutMode(t,e,s.left??s.default,"left"),await this._updateOutMode(t,e,s.right??s.default,"right"),await this._updateOutMode(t,e,s.top??s.default,"top")}}}};